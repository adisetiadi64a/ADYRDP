name: Free RDP via LocalXpose (Full Steps)

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 180

    steps:
    - name: 🧰 Setup RDP User
      run: |
        # username & password (ubah kalau mau)
        $User = "runneradmin"
        $Pass = "Test1234!"
        # create user if not exists, set password and add to admins / remote desktop users
        if (-not (Get-LocalUser -Name $User -ErrorAction SilentlyContinue)) {
          net user $User $Pass /add
        } else {
          net user $User $Pass
        }
        net localgroup administrators $User /add
        net localgroup "Remote Desktop Users" $User /add
        Write-Host "USER=$User" >> $env:GITHUB_ENV
        Write-Host "PASS=$Pass" >> $env:GITHUB_ENV
        Write-Host "✅ User created or updated: $User"

    - name: 🔥 Disable Windows Firewall (All Profiles)
      run: |
        # Turn off firewall for Domain/Private/Public
        Set-NetFirewallProfile -Profile Domain,Private,Public -Enabled False
        Write-Host "✅ Windows Firewall disabled (all profiles)."

    - name: ⬇️ Download LocalXpose (try multiple mirrors)
      run: |
        $out = $false
        $targets = @(
          "https://api.localxpose.io/api/v2/downloads/lx-windows-386.zip",
          "https://cdn.jsdelivr.net/gh/ganeshkumar-s/localxpose-mirror/lx-windows-386.zip",
          "https://github.com/localxpose/cli/releases/latest/download/lx-windows-386.zip"
        )
        foreach ($u in $targets) {
          Write-Host "Trying: $u"
          try {
            Invoke-WebRequest -Uri $u -OutFile "lx.zip" -UseBasicParsing -ErrorAction Stop
            Write-Host "Downloaded from $u"
            $out = $true
            break
          } catch {
            Write-Host "Failed: $u -> $($_.Exception.Message)"
          }
        }
        if (-not $out) {
          Write-Error "All download attempts failed. Consider uploading lx.exe to your repo or use another mirror."
          exit 1
        }
        Expand-Archive -Path "lx.zip" -DestinationPath .
        # find exe (common names: lx.exe or localxpose.exe)
        if (Test-Path ".\lx.exe") { Rename-Item ".\lx.exe" -NewName "localxpose.exe" -Force }
        if (-not (Test-Path ".\localxpose.exe")) {
          # try search in extracted folder
          $found = Get-ChildItem -Recurse -Filter "lx.exe" -File | Select-Object -First 1
          if ($found) { Copy-Item $found.FullName -Destination ".\localxpose.exe" -Force } else { Write-Error "localxpose binary not found after extraction"; exit 1 }
        }
        Write-Host "✅ localxpose.exe ready."

    - name: 🔑 Authenticate LocalXpose
      env:
        LOCALXPOSE_TOKEN: ${{ secrets.LOCALXPOSE_TOKEN }}
      run: |
        if (-not $env:LOCALXPOSE_TOKEN) {
          Write-Error "LOCALXPOSE_TOKEN is empty. Set the secret in repository settings."
          exit 1
        }
        .\localxpose.exe authtoken $env:LOCALXPOSE_TOKEN
        Write-Host "✅ Auth token applied."

    - name: 🚀 Start LocalXpose TCP Tunnel (RDP)
      run: |
        # Start tunnel in background and capture output to a file
        Start-Process -FilePath ".\localxpose.exe" -ArgumentList "tunnel tcp --to 3389" -
