name: Free RDP via LocalXpose (Use lx.exe from repo)

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 180

    steps:
    - name: üß∞ Setup RDP User
      run: |
        $User = "runneradmin"
        $Pass = "Test1234!"
        if (-not (Get-LocalUser -Name $User -ErrorAction SilentlyContinue)) {
          net user $User $Pass /add
          Write-Host "Created local user $User"
        } else {
          net user $User $Pass
          Write-Host "Updated password for $User"
        }
        net localgroup administrators $User /add
        net localgroup "Remote Desktop Users" $User /add
        Write-Host "USER=$User" >> $env:GITHUB_ENV
        Write-Host "PASS=$Pass" >> $env:GITHUB_ENV
        Write-Host "‚úÖ User ready: $User"

    - name: üî• Disable Windows Firewall (All Profiles)
      run: |
        Set-NetFirewallProfile -Profile Domain,Private,Public -Enabled False
        Write-Host "‚úÖ Windows Firewall disabled (Domain, Private, Public)."

- name: Use local lx.exe (uploaded to repo)
  run: |
    if (Test-Path "./.github/workflows/lx.exe") {
      Copy-Item "./.github/workflows/lx.exe" "./lx.exe"
      Write-Output "‚úÖ lx.exe found and copied successfully."
    } else {
      Write-Error "‚ùå lx.exe not found in .github/workflows/. Please upload it."
      exit 1
    }

    - name: üîë Authenticate LocalXpose (uses repo secret)
      env:
        LOCALXPOSE_TOKEN: ${{ secrets.LOCALXPOSE_TOKEN }}
      run: |
        if (-not $env:LOCALXPOSE_TOKEN) {
          Write-Error "LOCALXPOSE_TOKEN secret is not set. Add it in repository Settings ‚Üí Secrets."
          exit 1
        }
        .\localxpose.exe authtoken $env:LOCALXPOSE_TOKEN
        Write-Host "‚úÖ LocalXpose authtoken applied."

    - name: üöÄ Start LocalXpose TCP Tunnel (RDP) & capture output
      run: |
        # Start LocalXpose tunnel in background and redirect stdout/stderr to files
        Start-Process -FilePath ".\localxpose.exe" -ArgumentList "tunnel", "tcp", "--to", "3389" -NoNewWindow -RedirectStandardOutput ".\tunnel.out" -RedirectStandardError ".\tunnel.err"
        Write-Host "Started localxpose tunnel process, waiting for output..."
        Start-Sleep -Seconds 10
        # show some output lines that usually contain tcp://
        if (Test-Path ".\tunnel.out") {
          Get-Content .\tunnel.out | Select-String -Pattern "tcp://" -AllMatches | ForEach-Object { Write-Host $_.Line }
        }
        # also run list command (some builds print tunnel info)
        .\localxpose.exe tunnels list | ForEach-Object { Write-Host $_ }

    - name: üñ•Ô∏è Show RDP Access Info (final)
      run: |
        Write-Host "========================================"
        Write-Host "RDP CREDENTIALS"
        Write-Host "Username: $env:USER"
        Write-Host "Password: $env:PASS"
        Write-Host "----------------------------------------"
        Write-Host "Tunnel output (tunnel.out):"
        if (Test-Path ".\tunnel.out") {
          Get-Content .\tunnel.out
        } else {
          Write-Host "(tunnel.out not found)"
        }
        Write-Host "If you don't see tcp://host:port above, check tunnel.err for errors:"
        if (Test-Path ".\tunnel.err") {
          Write-Host "--- tunnel.err ---"
          Get-Content .\tunnel.err
        }
        Write-Host "========================================"
        Write-Host "Use the tcp://host:port shown above in your RDP client (mstsc)."
